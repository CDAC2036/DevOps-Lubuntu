pipeline{
	agent any

	environment {
		// Define environment variables for Git and DockerHub credentials
		
		GIT_REPOSITORY_URL = 'https://github.com/CDAC2036/docker-jenkins-demo.git'
		DOCKER_IMAGE_NAME = 'docker cdac2036/docker_jenkins_demo'
		IMAGE_TAG = '1.0' // Make sure to use string for tag

	}
	
	stages {
		stage('Clone Repository'){
			steps {

				//Checkout the Git Repository
				script {
					try {
						git branch: 'main', url: GIT_REPOSITORY_URL
					}
					catch (Exception e){
						echo "Failed to clone repository: ${e.message}"
						error "Failed to clone repository"
					}
				}
			}
		}
		
		stage('Build Docker Image'){
                        steps {

                                //Build Docker image using Dockerfile in repository
                                script { 
                                        try {
                                                docker.build(DOCKER_IMAGE_NAME)
                                        }
                                        catch (Exception e){
                                                echo "Failed to build Docker Image: ${e.message}"
                                                error "Failed to build Docker Image"
                                        }
                                }
                        }
                }

		stage('Push to DockerHub'){
                        steps {

                                //Log in to DockerHub and push Docker image
                                script {     
                                        try {
						withCredentials([usernamePassword(credentialsId: 'my-docker-hub-credentials-id', usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
                                                	docker.withRegistry('https://index.docker.io/v1/'){
								sh "echo \$DOCKER_PASSWORD | docker_login -u \$DOCKER_USERNAME --password-stdin docker.io"
								docker.image(DOCKER_IMAGE_NAME).push(IMAGE_TAG)
							}
						}
                                        }
                                        catch (Exception e){
                                                echo "Failed to push Docker Image to registry: ${e.message}"
                                                error "Failed to push Docker Image"
                                        }
                                }
                        }
                }
	}
}
